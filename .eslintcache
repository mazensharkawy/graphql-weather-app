[{"/Users/mazen/playground/rtk-starter/src/App.tsx":"1","/Users/mazen/playground/rtk-starter/src/GraphQL/queries.ts":"2","/Users/mazen/playground/rtk-starter/src/weather.tsx":"3","/Users/mazen/playground/rtk-starter/src/index.tsx":"4","/Users/mazen/playground/rtk-starter/src/redux-toolkit/index.ts":"5","/Users/mazen/playground/rtk-starter/src/search.tsx":"6"},{"size":821,"mtime":1610832821036,"results":"7","hashOfConfig":"8"},{"size":459,"mtime":1610835193189,"results":"9","hashOfConfig":"8"},{"size":688,"mtime":1610836135482,"results":"10","hashOfConfig":"8"},{"size":343,"mtime":1610835200804,"results":"11","hashOfConfig":"8"},{"size":1384,"mtime":1610834547104,"results":"12","hashOfConfig":"8"},{"size":1892,"mtime":1610835895140,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wz714s",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/mazen/playground/rtk-starter/src/App.tsx",["29","30","31","32"],"/Users/mazen/playground/rtk-starter/src/GraphQL/queries.ts",[],"/Users/mazen/playground/rtk-starter/src/weather.tsx",[],"/Users/mazen/playground/rtk-starter/src/index.tsx",[],["33","34"],"/Users/mazen/playground/rtk-starter/src/redux-toolkit/index.ts",[],["35","36"],"/Users/mazen/playground/rtk-starter/src/search.tsx",["37","38","39"],"import React, { useEffect, useState } from 'react';\nimport { editSearchInput, State, setUnits, setWeatherData } from './redux-toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetCityByName } from './GraphQL/queryTypes';\nimport { useQuery } from '@apollo/client';\nimport { LOAD_WEATHER } from './GraphQL/queries';\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    margin: 1vw auto;\n    width: fit-content;\n`\nconst Input = styled.input`\n    border: 1px solid grey;\n    border-radius: 5px;\n    width: 50vw;\n`\nconst DropDown = styled.select`\n    border: 1px solid grey;\n    border-radius: 5px;\n`\n\ninterface LoadWeatherVars {\n    name: String;\n    units: String;\n}\n\nconst UNIT_OPTIONS: string[] = [\"metric\", \"kelvin\", \"imperial\"]\nconst upperFirst = (name: string): string => name.charAt(0).toUpperCase() + name.slice(1)\nfunction Search() {\n    const { city, units } = useSelector((state: State) => state.weatherSettings)\n    const dispatch = useDispatch();\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n        dispatch(editSearchInput(event.target.value))\n\n    const handleUnitsChange = (event: React.ChangeEvent<HTMLSelectElement>) =>\n        dispatch(setUnits(event.target.value))\n    let { error, loading, data } = useQuery<GetCityByName, LoadWeatherVars>(LOAD_WEATHER, { variables: { name: city, units } })\n\n    useEffect(() => {\n        if (data) {\n            dispatch(setWeatherData(data.getCityByName))\n        }\n    })\n    return (\n        <Container>\n            <Input placeholder=\"Search Weather By City\" type=\"text\" value={city} onChange={handleInputChange} />\n            <DropDown value={units} onChange={handleUnitsChange}>\n                {UNIT_OPTIONS.map((unit) => <option value={unit}>{upperFirst(unit)}</option>)}\n            </DropDown>\n        </Container>\n    );\n}\n\nexport default Search;\n",{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"44","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"40","severity":1,"message":"45","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"40","severity":1,"message":"46","line":4,"column":71,"nodeType":"42","messageId":"43","endLine":4,"endColumn":79},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"49","replacedBy":"52"},{"ruleId":"40","severity":1,"message":"44","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"40","severity":1,"message":"53","line":38,"column":11,"nodeType":"42","messageId":"43","endLine":38,"endColumn":16},{"ruleId":"40","severity":1,"message":"54","line":38,"column":18,"nodeType":"42","messageId":"43","endLine":38,"endColumn":25},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'logo' is defined but never used.","'useQuery' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]